{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { take, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./mathserviceimpl\";\nexport let MathDirective = /*#__PURE__*/(() => {\n  class MathDirective {\n    constructor(service, el) {\n      this.service = service;\n      this.el = el;\n      this.alive$ = new Subject();\n      this._el = el.nativeElement;\n    }\n    ngOnInit() {\n      this.service.ready().pipe(take(1), takeUntil(this.alive$)).subscribe(res => {\n        this.service.render(this._el, this.appMath);\n      });\n    }\n    ngOnChanges(changes) {\n      console.log(changes);\n    }\n    ngOnDestroy() {\n      this.alive$.next(false);\n    }\n  }\n  MathDirective.ɵfac = function MathDirective_Factory(t) {\n    return new (t || MathDirective)(i0.ɵɵdirectiveInject(i1.MathServiceImpl), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  MathDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MathDirective,\n    selectors: [[\"\", \"appMath\", \"\"]],\n    inputs: {\n      appMath: \"appMath\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return MathDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}