{"ast":null,"code":"import { MathServiceImpl } from \"./mathserviceimpl\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./mathserviceimpl\";\nexport let MathModule = /*#__PURE__*/(() => {\n  class MathModule {\n    constructor(mathService) {\n      // see https://docs.mathjax.org/en/latest/advanced/dynamic.html\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML';\n      script.async = true;\n      document.getElementsByTagName('head')[0].appendChild(script);\n      const config = document.createElement('script');\n      config.type = 'text/x-mathjax-config';\n      // register notifier to StartupHook and trigger .next() for all subscribers\n      config.text = `\n      MathJax.Hub.Config({\n          skipStartupTypeset: true,\n          tex2jax: { inlineMath: [[\"$\", \"$\"]],displayMath:[[\"$$\", \"$$\"]] }\n        });\n        MathJax.Hub.Register.StartupHook('End', () => {\n          window.hubReady.next();\n          window.hubReady.complete();\n        });\n      `;\n      document.getElementsByTagName('head')[0].appendChild(config);\n    }\n    // this is needed so service constructor which will bind\n    // notifier to window object before module constructor is called\n    static forRoot() {\n      return {\n        ngModule: MathModule,\n        providers: [{\n          provide: MathServiceImpl,\n          useClass: MathServiceImpl\n        }]\n      };\n    }\n  }\n  MathModule.ɵfac = function MathModule_Factory(t) {\n    return new (t || MathModule)(i0.ɵɵinject(i1.MathServiceImpl));\n  };\n  MathModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: MathModule\n  });\n  MathModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({});\n  return MathModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}